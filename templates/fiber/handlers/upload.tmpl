package handlers

import (
	"fmt"
	"os"
	"path"

	"path/filepath"

	"github.com/gofiber/fiber/v2"
)

func Upload(ctx *fiber.Ctx) error {
	file, err := ctx.FormFile("file")
	if err != nil {
		return StopWithError(ctx, err)
	}
	id := ctx.FormValue("fileId")
	if id == "" {
		return StopWithError(ctx, err)
	}
	os.Mkdir("./uploads", 0777)
	err = ctx.SaveFile(file, fmt.Sprintf("./uploads/%s%s", id, filepath.Ext(file.Filename)))
	if err != nil {
		return StopWithError(ctx, err, fiber.StatusInternalServerError)
	}

	return ctx.JSON(fiber.Map{
		"code":   fiber.StatusCreated,
		"status": "success",
	})
}

func Download(ctx *fiber.Ctx) error {
	filename := ctx.Params("filename")
	_, err := os.Stat("./uploads/" + filename)
	if err != nil {
		println(err.Error())
	}
	cwd, _ := os.Getwd()
	filepath := path.Join(cwd, "./uploads/", filename)
	return ctx.SendFile(filepath)
}
