package handlers

import (
	"github.com/gofiber/fiber/v2"
)

func StopWithError(ctx *fiber.Ctx, err error, codes ...int) error {
	code := fiber.StatusBadRequest
	if len(codes) > 0 {
		code = codes[0]
	}
	response := fiber.Map{
		"code":   code,
		"status": "error",
	}

	if err != nil {
		response["error"] = err.Error()
	}
	return ctx.Status(code).JSON(response)
}

func StopWithSuccess(ctx *fiber.Ctx, event string, data any, codes ...int) error {
	code := fiber.StatusOK
	if len(codes) > 0 {
		code = codes[0]
	}
	response := fiber.Map{
		"code":   code,
		"status": "success",
	}
	if data != nil {
		response["data"] = data
	}
	Notify(event, data)
	return ctx.Status(code).JSON(response)
}
